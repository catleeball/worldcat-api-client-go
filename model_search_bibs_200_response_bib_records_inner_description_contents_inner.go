/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner{}

// SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner Formatted Contents Note [v505sa,t,r,g,u]
type SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner struct {
	ContentNote                *SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner `json:"contentNote,omitempty"`
	Titles                     []string                                                  `json:"titles,omitempty"`
	MiscellaneousInfo          []string                                                  `json:"miscellaneousInfo,omitempty"`
	StatementsOfResponsibility []string                                                  `json:"statementsOfResponsibility,omitempty"`
	Uris                       []string                                                  `json:"uris,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner instantiates a new SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner() *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner {
	this := SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerDescriptionContentsInnerWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerDescriptionContentsInnerWithDefaults() *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner {
	this := SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner{}
	return &this
}

// GetContentNote returns the ContentNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetContentNote() SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner {
	if o == nil || IsNil(o.ContentNote) {
		var ret SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner
		return ret
	}
	return *o.ContentNote
}

// GetContentNoteOk returns a tuple with the ContentNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetContentNoteOk() (*SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner, bool) {
	if o == nil || IsNil(o.ContentNote) {
		return nil, false
	}
	return o.ContentNote, true
}

// HasContentNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) HasContentNote() bool {
	if o != nil && !IsNil(o.ContentNote) {
		return true
	}

	return false
}

// SetContentNote gets a reference to the given SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner and assigns it to the ContentNote field.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) SetContentNote(v SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner) {
	o.ContentNote = &v
}

// GetTitles returns the Titles field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetTitles() []string {
	if o == nil || IsNil(o.Titles) {
		var ret []string
		return ret
	}
	return o.Titles
}

// GetTitlesOk returns a tuple with the Titles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetTitlesOk() ([]string, bool) {
	if o == nil || IsNil(o.Titles) {
		return nil, false
	}
	return o.Titles, true
}

// HasTitles returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) HasTitles() bool {
	if o != nil && !IsNil(o.Titles) {
		return true
	}

	return false
}

// SetTitles gets a reference to the given []string and assigns it to the Titles field.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) SetTitles(v []string) {
	o.Titles = v
}

// GetMiscellaneousInfo returns the MiscellaneousInfo field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetMiscellaneousInfo() []string {
	if o == nil || IsNil(o.MiscellaneousInfo) {
		var ret []string
		return ret
	}
	return o.MiscellaneousInfo
}

// GetMiscellaneousInfoOk returns a tuple with the MiscellaneousInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetMiscellaneousInfoOk() ([]string, bool) {
	if o == nil || IsNil(o.MiscellaneousInfo) {
		return nil, false
	}
	return o.MiscellaneousInfo, true
}

// HasMiscellaneousInfo returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) HasMiscellaneousInfo() bool {
	if o != nil && !IsNil(o.MiscellaneousInfo) {
		return true
	}

	return false
}

// SetMiscellaneousInfo gets a reference to the given []string and assigns it to the MiscellaneousInfo field.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) SetMiscellaneousInfo(v []string) {
	o.MiscellaneousInfo = v
}

// GetStatementsOfResponsibility returns the StatementsOfResponsibility field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetStatementsOfResponsibility() []string {
	if o == nil || IsNil(o.StatementsOfResponsibility) {
		var ret []string
		return ret
	}
	return o.StatementsOfResponsibility
}

// GetStatementsOfResponsibilityOk returns a tuple with the StatementsOfResponsibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetStatementsOfResponsibilityOk() ([]string, bool) {
	if o == nil || IsNil(o.StatementsOfResponsibility) {
		return nil, false
	}
	return o.StatementsOfResponsibility, true
}

// HasStatementsOfResponsibility returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) HasStatementsOfResponsibility() bool {
	if o != nil && !IsNil(o.StatementsOfResponsibility) {
		return true
	}

	return false
}

// SetStatementsOfResponsibility gets a reference to the given []string and assigns it to the StatementsOfResponsibility field.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) SetStatementsOfResponsibility(v []string) {
	o.StatementsOfResponsibility = v
}

// GetUris returns the Uris field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetUris() []string {
	if o == nil || IsNil(o.Uris) {
		var ret []string
		return ret
	}
	return o.Uris
}

// GetUrisOk returns a tuple with the Uris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) GetUrisOk() ([]string, bool) {
	if o == nil || IsNil(o.Uris) {
		return nil, false
	}
	return o.Uris, true
}

// HasUris returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) HasUris() bool {
	if o != nil && !IsNil(o.Uris) {
		return true
	}

	return false
}

// SetUris gets a reference to the given []string and assigns it to the Uris field.
func (o *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) SetUris(v []string) {
	o.Uris = v
}

func (o SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentNote) {
		toSerialize["contentNote"] = o.ContentNote
	}
	if !IsNil(o.Titles) {
		toSerialize["titles"] = o.Titles
	}
	if !IsNil(o.MiscellaneousInfo) {
		toSerialize["miscellaneousInfo"] = o.MiscellaneousInfo
	}
	if !IsNil(o.StatementsOfResponsibility) {
		toSerialize["statementsOfResponsibility"] = o.StatementsOfResponsibility
	}
	if !IsNil(o.Uris) {
		toSerialize["uris"] = o.Uris
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner struct {
	value *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) Get() *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) Set(val *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner(val *SearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) *NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner {
	return &NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerDescriptionContentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
