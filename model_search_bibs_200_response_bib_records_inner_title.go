/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInnerTitle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInnerTitle{}

// SearchBibs200ResponseBibRecordsInnerTitle struct for SearchBibs200ResponseBibRecordsInnerTitle
type SearchBibs200ResponseBibRecordsInnerTitle struct {
	// Main Titles [v245sa,b,c,f,g,k,n,p,s]
	MainTitles []SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner `json:"mainTitles,omitempty"`
	// Series Titles [(v490,v810,v830 - sa,v)]
	SeriesTitles []SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner `json:"seriesTitles,omitempty"`
	// Uniform Titles [(v130,v730,v793,v799 - sa,d,f,g,k,l,m,n,o,p,r,s,t) && v240sa,d,f,g,k,l,m,n,o,p,r,s]
	UniformTitles []string `json:"uniformTitles,omitempty"`
	// Added Entry Uniform Titles [v730sa,d,f,g,k,l,m,n,o,p,r,s,i,t,x]
	AdditionalTitles []SearchBibs200ResponseBibRecordsInnerTitleAdditionalTitlesInner `json:"additionalTitles,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInnerTitle instantiates a new SearchBibs200ResponseBibRecordsInnerTitle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInnerTitle() *SearchBibs200ResponseBibRecordsInnerTitle {
	this := SearchBibs200ResponseBibRecordsInnerTitle{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerTitleWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInnerTitle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerTitleWithDefaults() *SearchBibs200ResponseBibRecordsInnerTitle {
	this := SearchBibs200ResponseBibRecordsInnerTitle{}
	return &this
}

// GetMainTitles returns the MainTitles field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetMainTitles() []SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner {
	if o == nil || IsNil(o.MainTitles) {
		var ret []SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner
		return ret
	}
	return o.MainTitles
}

// GetMainTitlesOk returns a tuple with the MainTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetMainTitlesOk() ([]SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner, bool) {
	if o == nil || IsNil(o.MainTitles) {
		return nil, false
	}
	return o.MainTitles, true
}

// HasMainTitles returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) HasMainTitles() bool {
	if o != nil && !IsNil(o.MainTitles) {
		return true
	}

	return false
}

// SetMainTitles gets a reference to the given []SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner and assigns it to the MainTitles field.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) SetMainTitles(v []SearchBibs200ResponseBibRecordsInnerTitleMainTitlesInner) {
	o.MainTitles = v
}

// GetSeriesTitles returns the SeriesTitles field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetSeriesTitles() []SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner {
	if o == nil || IsNil(o.SeriesTitles) {
		var ret []SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner
		return ret
	}
	return o.SeriesTitles
}

// GetSeriesTitlesOk returns a tuple with the SeriesTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetSeriesTitlesOk() ([]SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner, bool) {
	if o == nil || IsNil(o.SeriesTitles) {
		return nil, false
	}
	return o.SeriesTitles, true
}

// HasSeriesTitles returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) HasSeriesTitles() bool {
	if o != nil && !IsNil(o.SeriesTitles) {
		return true
	}

	return false
}

// SetSeriesTitles gets a reference to the given []SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner and assigns it to the SeriesTitles field.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) SetSeriesTitles(v []SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) {
	o.SeriesTitles = v
}

// GetUniformTitles returns the UniformTitles field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetUniformTitles() []string {
	if o == nil || IsNil(o.UniformTitles) {
		var ret []string
		return ret
	}
	return o.UniformTitles
}

// GetUniformTitlesOk returns a tuple with the UniformTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetUniformTitlesOk() ([]string, bool) {
	if o == nil || IsNil(o.UniformTitles) {
		return nil, false
	}
	return o.UniformTitles, true
}

// HasUniformTitles returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) HasUniformTitles() bool {
	if o != nil && !IsNil(o.UniformTitles) {
		return true
	}

	return false
}

// SetUniformTitles gets a reference to the given []string and assigns it to the UniformTitles field.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) SetUniformTitles(v []string) {
	o.UniformTitles = v
}

// GetAdditionalTitles returns the AdditionalTitles field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetAdditionalTitles() []SearchBibs200ResponseBibRecordsInnerTitleAdditionalTitlesInner {
	if o == nil || IsNil(o.AdditionalTitles) {
		var ret []SearchBibs200ResponseBibRecordsInnerTitleAdditionalTitlesInner
		return ret
	}
	return o.AdditionalTitles
}

// GetAdditionalTitlesOk returns a tuple with the AdditionalTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) GetAdditionalTitlesOk() ([]SearchBibs200ResponseBibRecordsInnerTitleAdditionalTitlesInner, bool) {
	if o == nil || IsNil(o.AdditionalTitles) {
		return nil, false
	}
	return o.AdditionalTitles, true
}

// HasAdditionalTitles returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) HasAdditionalTitles() bool {
	if o != nil && !IsNil(o.AdditionalTitles) {
		return true
	}

	return false
}

// SetAdditionalTitles gets a reference to the given []SearchBibs200ResponseBibRecordsInnerTitleAdditionalTitlesInner and assigns it to the AdditionalTitles field.
func (o *SearchBibs200ResponseBibRecordsInnerTitle) SetAdditionalTitles(v []SearchBibs200ResponseBibRecordsInnerTitleAdditionalTitlesInner) {
	o.AdditionalTitles = v
}

func (o SearchBibs200ResponseBibRecordsInnerTitle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInnerTitle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MainTitles) {
		toSerialize["mainTitles"] = o.MainTitles
	}
	if !IsNil(o.SeriesTitles) {
		toSerialize["seriesTitles"] = o.SeriesTitles
	}
	if !IsNil(o.UniformTitles) {
		toSerialize["uniformTitles"] = o.UniformTitles
	}
	if !IsNil(o.AdditionalTitles) {
		toSerialize["additionalTitles"] = o.AdditionalTitles
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInnerTitle struct {
	value *SearchBibs200ResponseBibRecordsInnerTitle
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInnerTitle) Get() *SearchBibs200ResponseBibRecordsInnerTitle {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerTitle) Set(val *SearchBibs200ResponseBibRecordsInnerTitle) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInnerTitle) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerTitle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInnerTitle(val *SearchBibs200ResponseBibRecordsInnerTitle) *NullableSearchBibs200ResponseBibRecordsInnerTitle {
	return &NullableSearchBibs200ResponseBibRecordsInnerTitle{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInnerTitle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerTitle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
