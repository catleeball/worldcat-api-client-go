/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner{}

// SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner Disseration notes [v502sa,b,c,d,g,o]
type SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner struct {
	DisserationNote   *string `json:"disserationNote,omitempty"`
	Type              *string `json:"type,omitempty"`
	Institution       *string `json:"institution,omitempty"`
	Year              *string `json:"year,omitempty"`
	Id                *string `json:"id,omitempty"`
	MiscellaneousInfo *string `json:"miscellaneousInfo,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner instantiates a new SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner() *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner {
	this := SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInnerWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInnerWithDefaults() *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner {
	this := SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner{}
	return &this
}

// GetDisserationNote returns the DisserationNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetDisserationNote() string {
	if o == nil || IsNil(o.DisserationNote) {
		var ret string
		return ret
	}
	return *o.DisserationNote
}

// GetDisserationNoteOk returns a tuple with the DisserationNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetDisserationNoteOk() (*string, bool) {
	if o == nil || IsNil(o.DisserationNote) {
		return nil, false
	}
	return o.DisserationNote, true
}

// HasDisserationNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) HasDisserationNote() bool {
	if o != nil && !IsNil(o.DisserationNote) {
		return true
	}

	return false
}

// SetDisserationNote gets a reference to the given string and assigns it to the DisserationNote field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) SetDisserationNote(v string) {
	o.DisserationNote = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) SetType(v string) {
	o.Type = &v
}

// GetInstitution returns the Institution field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetInstitution() string {
	if o == nil || IsNil(o.Institution) {
		var ret string
		return ret
	}
	return *o.Institution
}

// GetInstitutionOk returns a tuple with the Institution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetInstitutionOk() (*string, bool) {
	if o == nil || IsNil(o.Institution) {
		return nil, false
	}
	return o.Institution, true
}

// HasInstitution returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) HasInstitution() bool {
	if o != nil && !IsNil(o.Institution) {
		return true
	}

	return false
}

// SetInstitution gets a reference to the given string and assigns it to the Institution field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) SetInstitution(v string) {
	o.Institution = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) SetYear(v string) {
	o.Year = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) SetId(v string) {
	o.Id = &v
}

// GetMiscellaneousInfo returns the MiscellaneousInfo field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetMiscellaneousInfo() string {
	if o == nil || IsNil(o.MiscellaneousInfo) {
		var ret string
		return ret
	}
	return *o.MiscellaneousInfo
}

// GetMiscellaneousInfoOk returns a tuple with the MiscellaneousInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) GetMiscellaneousInfoOk() (*string, bool) {
	if o == nil || IsNil(o.MiscellaneousInfo) {
		return nil, false
	}
	return o.MiscellaneousInfo, true
}

// HasMiscellaneousInfo returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) HasMiscellaneousInfo() bool {
	if o != nil && !IsNil(o.MiscellaneousInfo) {
		return true
	}

	return false
}

// SetMiscellaneousInfo gets a reference to the given string and assigns it to the MiscellaneousInfo field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) SetMiscellaneousInfo(v string) {
	o.MiscellaneousInfo = &v
}

func (o SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisserationNote) {
		toSerialize["disserationNote"] = o.DisserationNote
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Institution) {
		toSerialize["institution"] = o.Institution
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MiscellaneousInfo) {
		toSerialize["miscellaneousInfo"] = o.MiscellaneousInfo
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner struct {
	value *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) Get() *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) Set(val *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner(val *SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) *NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner {
	return &NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
