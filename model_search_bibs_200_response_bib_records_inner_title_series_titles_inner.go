/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner{}

// SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner struct for SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner
type SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner struct {
	// [(v490,v810,v830 - sa)]
	SeriesTitle *string `json:"seriesTitle,omitempty"`
	// [(v490,v810,v830 - sv)]
	Volume *string `json:"volume,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner instantiates a new SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner() *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner {
	this := SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInnerWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInnerWithDefaults() *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner {
	this := SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner{}
	return &this
}

// GetSeriesTitle returns the SeriesTitle field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) GetSeriesTitle() string {
	if o == nil || IsNil(o.SeriesTitle) {
		var ret string
		return ret
	}
	return *o.SeriesTitle
}

// GetSeriesTitleOk returns a tuple with the SeriesTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) GetSeriesTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesTitle) {
		return nil, false
	}
	return o.SeriesTitle, true
}

// HasSeriesTitle returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) HasSeriesTitle() bool {
	if o != nil && !IsNil(o.SeriesTitle) {
		return true
	}

	return false
}

// SetSeriesTitle gets a reference to the given string and assigns it to the SeriesTitle field.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) SetSeriesTitle(v string) {
	o.SeriesTitle = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) GetVolume() string {
	if o == nil || IsNil(o.Volume) {
		var ret string
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) GetVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given string and assigns it to the Volume field.
func (o *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) SetVolume(v string) {
	o.Volume = &v
}

func (o SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SeriesTitle) {
		toSerialize["seriesTitle"] = o.SeriesTitle
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner struct {
	value *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) Get() *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) Set(val *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner(val *SearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) *NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner {
	return &NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerTitleSeriesTitlesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
