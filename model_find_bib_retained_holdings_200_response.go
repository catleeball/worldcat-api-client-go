/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FindBibRetainedHoldings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FindBibRetainedHoldings200Response{}

// FindBibRetainedHoldings200Response struct for FindBibRetainedHoldings200Response
type FindBibRetainedHoldings200Response struct {
	NumberOfRecords *int32                                                `json:"numberOfRecords,omitempty"`
	BriefRecords    []FindBibRetainedHoldings200ResponseBriefRecordsInner `json:"briefRecords,omitempty"`
	SearchFacets    []FindBibRetainedHoldings200ResponseSearchFacetsInner `json:"searchFacets,omitempty"`
}

// NewFindBibRetainedHoldings200Response instantiates a new FindBibRetainedHoldings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindBibRetainedHoldings200Response() *FindBibRetainedHoldings200Response {
	this := FindBibRetainedHoldings200Response{}
	return &this
}

// NewFindBibRetainedHoldings200ResponseWithDefaults instantiates a new FindBibRetainedHoldings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindBibRetainedHoldings200ResponseWithDefaults() *FindBibRetainedHoldings200Response {
	this := FindBibRetainedHoldings200Response{}
	return &this
}

// GetNumberOfRecords returns the NumberOfRecords field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200Response) GetNumberOfRecords() int32 {
	if o == nil || IsNil(o.NumberOfRecords) {
		var ret int32
		return ret
	}
	return *o.NumberOfRecords
}

// GetNumberOfRecordsOk returns a tuple with the NumberOfRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200Response) GetNumberOfRecordsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfRecords) {
		return nil, false
	}
	return o.NumberOfRecords, true
}

// HasNumberOfRecords returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200Response) HasNumberOfRecords() bool {
	if o != nil && !IsNil(o.NumberOfRecords) {
		return true
	}

	return false
}

// SetNumberOfRecords gets a reference to the given int32 and assigns it to the NumberOfRecords field.
func (o *FindBibRetainedHoldings200Response) SetNumberOfRecords(v int32) {
	o.NumberOfRecords = &v
}

// GetBriefRecords returns the BriefRecords field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200Response) GetBriefRecords() []FindBibRetainedHoldings200ResponseBriefRecordsInner {
	if o == nil || IsNil(o.BriefRecords) {
		var ret []FindBibRetainedHoldings200ResponseBriefRecordsInner
		return ret
	}
	return o.BriefRecords
}

// GetBriefRecordsOk returns a tuple with the BriefRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200Response) GetBriefRecordsOk() ([]FindBibRetainedHoldings200ResponseBriefRecordsInner, bool) {
	if o == nil || IsNil(o.BriefRecords) {
		return nil, false
	}
	return o.BriefRecords, true
}

// HasBriefRecords returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200Response) HasBriefRecords() bool {
	if o != nil && !IsNil(o.BriefRecords) {
		return true
	}

	return false
}

// SetBriefRecords gets a reference to the given []FindBibRetainedHoldings200ResponseBriefRecordsInner and assigns it to the BriefRecords field.
func (o *FindBibRetainedHoldings200Response) SetBriefRecords(v []FindBibRetainedHoldings200ResponseBriefRecordsInner) {
	o.BriefRecords = v
}

// GetSearchFacets returns the SearchFacets field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200Response) GetSearchFacets() []FindBibRetainedHoldings200ResponseSearchFacetsInner {
	if o == nil || IsNil(o.SearchFacets) {
		var ret []FindBibRetainedHoldings200ResponseSearchFacetsInner
		return ret
	}
	return o.SearchFacets
}

// GetSearchFacetsOk returns a tuple with the SearchFacets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200Response) GetSearchFacetsOk() ([]FindBibRetainedHoldings200ResponseSearchFacetsInner, bool) {
	if o == nil || IsNil(o.SearchFacets) {
		return nil, false
	}
	return o.SearchFacets, true
}

// HasSearchFacets returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200Response) HasSearchFacets() bool {
	if o != nil && !IsNil(o.SearchFacets) {
		return true
	}

	return false
}

// SetSearchFacets gets a reference to the given []FindBibRetainedHoldings200ResponseSearchFacetsInner and assigns it to the SearchFacets field.
func (o *FindBibRetainedHoldings200Response) SetSearchFacets(v []FindBibRetainedHoldings200ResponseSearchFacetsInner) {
	o.SearchFacets = v
}

func (o FindBibRetainedHoldings200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FindBibRetainedHoldings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberOfRecords) {
		toSerialize["numberOfRecords"] = o.NumberOfRecords
	}
	if !IsNil(o.BriefRecords) {
		toSerialize["briefRecords"] = o.BriefRecords
	}
	if !IsNil(o.SearchFacets) {
		toSerialize["searchFacets"] = o.SearchFacets
	}
	return toSerialize, nil
}

type NullableFindBibRetainedHoldings200Response struct {
	value *FindBibRetainedHoldings200Response
	isSet bool
}

func (v NullableFindBibRetainedHoldings200Response) Get() *FindBibRetainedHoldings200Response {
	return v.value
}

func (v *NullableFindBibRetainedHoldings200Response) Set(val *FindBibRetainedHoldings200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindBibRetainedHoldings200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindBibRetainedHoldings200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindBibRetainedHoldings200Response(val *FindBibRetainedHoldings200Response) *NullableFindBibRetainedHoldings200Response {
	return &NullableFindBibRetainedHoldings200Response{value: val, isSet: true}
}

func (v NullableFindBibRetainedHoldings200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindBibRetainedHoldings200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
