/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInnerNote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInnerNote{}

// SearchBibs200ResponseBibRecordsInnerNote struct for SearchBibs200ResponseBibRecordsInnerNote
type SearchBibs200ResponseBibRecordsInnerNote struct {
	// General Notes [v500sa, v501sa, v590sa,s3, (v59x sa-z)]
	GeneralNotes []SearchBibs200ResponseBibRecordsInnerNoteGeneralNotesInner `json:"generalNotes,omitempty"`
	// Target Audience Note [v521sa]
	AudienceNote      *string                                                          `json:"audienceNote,omitempty"`
	DissertationNotes []SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner `json:"dissertationNotes,omitempty"`
	// Cast Notes [v511sa]
	CastNotes []string `json:"castNotes,omitempty"`
	// Performers Notes [v511sa]
	PerformerNotes []string `json:"performerNotes,omitempty"`
	// Participants Notes [v511sa]
	ParticipantNote *string                                                   `json:"participantNote,omitempty"`
	EventNotes      []SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner `json:"eventNotes,omitempty"`
	// Production Credits Notes [v508sa]
	CreditNotes *string `json:"creditNotes,omitempty"`
	// Scale Note for Graphic Material [v507sa,b]
	ScaleNotes []string `json:"scaleNotes,omitempty"`
	// Reproduction Notes [v533]
	ReproductionNotes []SearchBibs200ResponseBibRecordsInnerNoteReproductionNotesInner `json:"reproductionNotes,omitempty"`
	// Terms Governing Use and Reproduction [v540sa]
	UseAndReproductionNotes []string `json:"useAndReproductionNotes,omitempty"`
	// Ownership and Custodial History [v561sa,3,5,u]
	UseownershipAndCustodialHistories []string `json:"useownershipAndCustodialHistories,omitempty"`
	// System Details Note [v538sa,u,i]
	SystemDetailNote *string `json:"systemDetailNote,omitempty"`
	// Awards Note [v586sa]
	AwardNote *string `json:"awardNote,omitempty"`
	// language note [v546sa]
	LanguageNotes []string `json:"languageNotes,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInnerNote instantiates a new SearchBibs200ResponseBibRecordsInnerNote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInnerNote() *SearchBibs200ResponseBibRecordsInnerNote {
	this := SearchBibs200ResponseBibRecordsInnerNote{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerNoteWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInnerNote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerNoteWithDefaults() *SearchBibs200ResponseBibRecordsInnerNote {
	this := SearchBibs200ResponseBibRecordsInnerNote{}
	return &this
}

// GetGeneralNotes returns the GeneralNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetGeneralNotes() []SearchBibs200ResponseBibRecordsInnerNoteGeneralNotesInner {
	if o == nil || IsNil(o.GeneralNotes) {
		var ret []SearchBibs200ResponseBibRecordsInnerNoteGeneralNotesInner
		return ret
	}
	return o.GeneralNotes
}

// GetGeneralNotesOk returns a tuple with the GeneralNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetGeneralNotesOk() ([]SearchBibs200ResponseBibRecordsInnerNoteGeneralNotesInner, bool) {
	if o == nil || IsNil(o.GeneralNotes) {
		return nil, false
	}
	return o.GeneralNotes, true
}

// HasGeneralNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasGeneralNotes() bool {
	if o != nil && !IsNil(o.GeneralNotes) {
		return true
	}

	return false
}

// SetGeneralNotes gets a reference to the given []SearchBibs200ResponseBibRecordsInnerNoteGeneralNotesInner and assigns it to the GeneralNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetGeneralNotes(v []SearchBibs200ResponseBibRecordsInnerNoteGeneralNotesInner) {
	o.GeneralNotes = v
}

// GetAudienceNote returns the AudienceNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetAudienceNote() string {
	if o == nil || IsNil(o.AudienceNote) {
		var ret string
		return ret
	}
	return *o.AudienceNote
}

// GetAudienceNoteOk returns a tuple with the AudienceNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetAudienceNoteOk() (*string, bool) {
	if o == nil || IsNil(o.AudienceNote) {
		return nil, false
	}
	return o.AudienceNote, true
}

// HasAudienceNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasAudienceNote() bool {
	if o != nil && !IsNil(o.AudienceNote) {
		return true
	}

	return false
}

// SetAudienceNote gets a reference to the given string and assigns it to the AudienceNote field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetAudienceNote(v string) {
	o.AudienceNote = &v
}

// GetDissertationNotes returns the DissertationNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetDissertationNotes() []SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner {
	if o == nil || IsNil(o.DissertationNotes) {
		var ret []SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner
		return ret
	}
	return o.DissertationNotes
}

// GetDissertationNotesOk returns a tuple with the DissertationNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetDissertationNotesOk() ([]SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner, bool) {
	if o == nil || IsNil(o.DissertationNotes) {
		return nil, false
	}
	return o.DissertationNotes, true
}

// HasDissertationNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasDissertationNotes() bool {
	if o != nil && !IsNil(o.DissertationNotes) {
		return true
	}

	return false
}

// SetDissertationNotes gets a reference to the given []SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner and assigns it to the DissertationNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetDissertationNotes(v []SearchBibs200ResponseBibRecordsInnerNoteDissertationNotesInner) {
	o.DissertationNotes = v
}

// GetCastNotes returns the CastNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetCastNotes() []string {
	if o == nil || IsNil(o.CastNotes) {
		var ret []string
		return ret
	}
	return o.CastNotes
}

// GetCastNotesOk returns a tuple with the CastNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetCastNotesOk() ([]string, bool) {
	if o == nil || IsNil(o.CastNotes) {
		return nil, false
	}
	return o.CastNotes, true
}

// HasCastNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasCastNotes() bool {
	if o != nil && !IsNil(o.CastNotes) {
		return true
	}

	return false
}

// SetCastNotes gets a reference to the given []string and assigns it to the CastNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetCastNotes(v []string) {
	o.CastNotes = v
}

// GetPerformerNotes returns the PerformerNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetPerformerNotes() []string {
	if o == nil || IsNil(o.PerformerNotes) {
		var ret []string
		return ret
	}
	return o.PerformerNotes
}

// GetPerformerNotesOk returns a tuple with the PerformerNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetPerformerNotesOk() ([]string, bool) {
	if o == nil || IsNil(o.PerformerNotes) {
		return nil, false
	}
	return o.PerformerNotes, true
}

// HasPerformerNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasPerformerNotes() bool {
	if o != nil && !IsNil(o.PerformerNotes) {
		return true
	}

	return false
}

// SetPerformerNotes gets a reference to the given []string and assigns it to the PerformerNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetPerformerNotes(v []string) {
	o.PerformerNotes = v
}

// GetParticipantNote returns the ParticipantNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetParticipantNote() string {
	if o == nil || IsNil(o.ParticipantNote) {
		var ret string
		return ret
	}
	return *o.ParticipantNote
}

// GetParticipantNoteOk returns a tuple with the ParticipantNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetParticipantNoteOk() (*string, bool) {
	if o == nil || IsNil(o.ParticipantNote) {
		return nil, false
	}
	return o.ParticipantNote, true
}

// HasParticipantNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasParticipantNote() bool {
	if o != nil && !IsNil(o.ParticipantNote) {
		return true
	}

	return false
}

// SetParticipantNote gets a reference to the given string and assigns it to the ParticipantNote field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetParticipantNote(v string) {
	o.ParticipantNote = &v
}

// GetEventNotes returns the EventNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetEventNotes() []SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner {
	if o == nil || IsNil(o.EventNotes) {
		var ret []SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner
		return ret
	}
	return o.EventNotes
}

// GetEventNotesOk returns a tuple with the EventNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetEventNotesOk() ([]SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner, bool) {
	if o == nil || IsNil(o.EventNotes) {
		return nil, false
	}
	return o.EventNotes, true
}

// HasEventNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasEventNotes() bool {
	if o != nil && !IsNil(o.EventNotes) {
		return true
	}

	return false
}

// SetEventNotes gets a reference to the given []SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner and assigns it to the EventNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetEventNotes(v []SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) {
	o.EventNotes = v
}

// GetCreditNotes returns the CreditNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetCreditNotes() string {
	if o == nil || IsNil(o.CreditNotes) {
		var ret string
		return ret
	}
	return *o.CreditNotes
}

// GetCreditNotesOk returns a tuple with the CreditNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetCreditNotesOk() (*string, bool) {
	if o == nil || IsNil(o.CreditNotes) {
		return nil, false
	}
	return o.CreditNotes, true
}

// HasCreditNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasCreditNotes() bool {
	if o != nil && !IsNil(o.CreditNotes) {
		return true
	}

	return false
}

// SetCreditNotes gets a reference to the given string and assigns it to the CreditNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetCreditNotes(v string) {
	o.CreditNotes = &v
}

// GetScaleNotes returns the ScaleNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetScaleNotes() []string {
	if o == nil || IsNil(o.ScaleNotes) {
		var ret []string
		return ret
	}
	return o.ScaleNotes
}

// GetScaleNotesOk returns a tuple with the ScaleNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetScaleNotesOk() ([]string, bool) {
	if o == nil || IsNil(o.ScaleNotes) {
		return nil, false
	}
	return o.ScaleNotes, true
}

// HasScaleNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasScaleNotes() bool {
	if o != nil && !IsNil(o.ScaleNotes) {
		return true
	}

	return false
}

// SetScaleNotes gets a reference to the given []string and assigns it to the ScaleNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetScaleNotes(v []string) {
	o.ScaleNotes = v
}

// GetReproductionNotes returns the ReproductionNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetReproductionNotes() []SearchBibs200ResponseBibRecordsInnerNoteReproductionNotesInner {
	if o == nil || IsNil(o.ReproductionNotes) {
		var ret []SearchBibs200ResponseBibRecordsInnerNoteReproductionNotesInner
		return ret
	}
	return o.ReproductionNotes
}

// GetReproductionNotesOk returns a tuple with the ReproductionNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetReproductionNotesOk() ([]SearchBibs200ResponseBibRecordsInnerNoteReproductionNotesInner, bool) {
	if o == nil || IsNil(o.ReproductionNotes) {
		return nil, false
	}
	return o.ReproductionNotes, true
}

// HasReproductionNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasReproductionNotes() bool {
	if o != nil && !IsNil(o.ReproductionNotes) {
		return true
	}

	return false
}

// SetReproductionNotes gets a reference to the given []SearchBibs200ResponseBibRecordsInnerNoteReproductionNotesInner and assigns it to the ReproductionNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetReproductionNotes(v []SearchBibs200ResponseBibRecordsInnerNoteReproductionNotesInner) {
	o.ReproductionNotes = v
}

// GetUseAndReproductionNotes returns the UseAndReproductionNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetUseAndReproductionNotes() []string {
	if o == nil || IsNil(o.UseAndReproductionNotes) {
		var ret []string
		return ret
	}
	return o.UseAndReproductionNotes
}

// GetUseAndReproductionNotesOk returns a tuple with the UseAndReproductionNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetUseAndReproductionNotesOk() ([]string, bool) {
	if o == nil || IsNil(o.UseAndReproductionNotes) {
		return nil, false
	}
	return o.UseAndReproductionNotes, true
}

// HasUseAndReproductionNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasUseAndReproductionNotes() bool {
	if o != nil && !IsNil(o.UseAndReproductionNotes) {
		return true
	}

	return false
}

// SetUseAndReproductionNotes gets a reference to the given []string and assigns it to the UseAndReproductionNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetUseAndReproductionNotes(v []string) {
	o.UseAndReproductionNotes = v
}

// GetUseownershipAndCustodialHistories returns the UseownershipAndCustodialHistories field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetUseownershipAndCustodialHistories() []string {
	if o == nil || IsNil(o.UseownershipAndCustodialHistories) {
		var ret []string
		return ret
	}
	return o.UseownershipAndCustodialHistories
}

// GetUseownershipAndCustodialHistoriesOk returns a tuple with the UseownershipAndCustodialHistories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetUseownershipAndCustodialHistoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.UseownershipAndCustodialHistories) {
		return nil, false
	}
	return o.UseownershipAndCustodialHistories, true
}

// HasUseownershipAndCustodialHistories returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasUseownershipAndCustodialHistories() bool {
	if o != nil && !IsNil(o.UseownershipAndCustodialHistories) {
		return true
	}

	return false
}

// SetUseownershipAndCustodialHistories gets a reference to the given []string and assigns it to the UseownershipAndCustodialHistories field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetUseownershipAndCustodialHistories(v []string) {
	o.UseownershipAndCustodialHistories = v
}

// GetSystemDetailNote returns the SystemDetailNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetSystemDetailNote() string {
	if o == nil || IsNil(o.SystemDetailNote) {
		var ret string
		return ret
	}
	return *o.SystemDetailNote
}

// GetSystemDetailNoteOk returns a tuple with the SystemDetailNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetSystemDetailNoteOk() (*string, bool) {
	if o == nil || IsNil(o.SystemDetailNote) {
		return nil, false
	}
	return o.SystemDetailNote, true
}

// HasSystemDetailNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasSystemDetailNote() bool {
	if o != nil && !IsNil(o.SystemDetailNote) {
		return true
	}

	return false
}

// SetSystemDetailNote gets a reference to the given string and assigns it to the SystemDetailNote field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetSystemDetailNote(v string) {
	o.SystemDetailNote = &v
}

// GetAwardNote returns the AwardNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetAwardNote() string {
	if o == nil || IsNil(o.AwardNote) {
		var ret string
		return ret
	}
	return *o.AwardNote
}

// GetAwardNoteOk returns a tuple with the AwardNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetAwardNoteOk() (*string, bool) {
	if o == nil || IsNil(o.AwardNote) {
		return nil, false
	}
	return o.AwardNote, true
}

// HasAwardNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasAwardNote() bool {
	if o != nil && !IsNil(o.AwardNote) {
		return true
	}

	return false
}

// SetAwardNote gets a reference to the given string and assigns it to the AwardNote field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetAwardNote(v string) {
	o.AwardNote = &v
}

// GetLanguageNotes returns the LanguageNotes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetLanguageNotes() []string {
	if o == nil || IsNil(o.LanguageNotes) {
		var ret []string
		return ret
	}
	return o.LanguageNotes
}

// GetLanguageNotesOk returns a tuple with the LanguageNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) GetLanguageNotesOk() ([]string, bool) {
	if o == nil || IsNil(o.LanguageNotes) {
		return nil, false
	}
	return o.LanguageNotes, true
}

// HasLanguageNotes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNote) HasLanguageNotes() bool {
	if o != nil && !IsNil(o.LanguageNotes) {
		return true
	}

	return false
}

// SetLanguageNotes gets a reference to the given []string and assigns it to the LanguageNotes field.
func (o *SearchBibs200ResponseBibRecordsInnerNote) SetLanguageNotes(v []string) {
	o.LanguageNotes = v
}

func (o SearchBibs200ResponseBibRecordsInnerNote) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInnerNote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GeneralNotes) {
		toSerialize["generalNotes"] = o.GeneralNotes
	}
	if !IsNil(o.AudienceNote) {
		toSerialize["audienceNote"] = o.AudienceNote
	}
	if !IsNil(o.DissertationNotes) {
		toSerialize["dissertationNotes"] = o.DissertationNotes
	}
	if !IsNil(o.CastNotes) {
		toSerialize["castNotes"] = o.CastNotes
	}
	if !IsNil(o.PerformerNotes) {
		toSerialize["performerNotes"] = o.PerformerNotes
	}
	if !IsNil(o.ParticipantNote) {
		toSerialize["participantNote"] = o.ParticipantNote
	}
	if !IsNil(o.EventNotes) {
		toSerialize["eventNotes"] = o.EventNotes
	}
	if !IsNil(o.CreditNotes) {
		toSerialize["creditNotes"] = o.CreditNotes
	}
	if !IsNil(o.ScaleNotes) {
		toSerialize["scaleNotes"] = o.ScaleNotes
	}
	if !IsNil(o.ReproductionNotes) {
		toSerialize["reproductionNotes"] = o.ReproductionNotes
	}
	if !IsNil(o.UseAndReproductionNotes) {
		toSerialize["useAndReproductionNotes"] = o.UseAndReproductionNotes
	}
	if !IsNil(o.UseownershipAndCustodialHistories) {
		toSerialize["useownershipAndCustodialHistories"] = o.UseownershipAndCustodialHistories
	}
	if !IsNil(o.SystemDetailNote) {
		toSerialize["systemDetailNote"] = o.SystemDetailNote
	}
	if !IsNil(o.AwardNote) {
		toSerialize["awardNote"] = o.AwardNote
	}
	if !IsNil(o.LanguageNotes) {
		toSerialize["languageNotes"] = o.LanguageNotes
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInnerNote struct {
	value *SearchBibs200ResponseBibRecordsInnerNote
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNote) Get() *SearchBibs200ResponseBibRecordsInnerNote {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNote) Set(val *SearchBibs200ResponseBibRecordsInnerNote) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNote) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInnerNote(val *SearchBibs200ResponseBibRecordsInnerNote) *NullableSearchBibs200ResponseBibRecordsInnerNote {
	return &NullableSearchBibs200ResponseBibRecordsInnerNote{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
