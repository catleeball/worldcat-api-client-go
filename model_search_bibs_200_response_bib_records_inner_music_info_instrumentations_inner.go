/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner{}

// SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner Instrumentation [v382sa,b,d,e,n,p,r,s,t,v]
type SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner struct {
	MediumOfPerformance             []string `json:"mediumOfPerformance,omitempty"`
	Soloists                        []string `json:"soloists,omitempty"`
	DoublingInstruments             []string `json:"doublingInstruments,omitempty"`
	NumberOfEnsemblesOfSameTypes    []string `json:"numberOfEnsemblesOfSameTypes,omitempty"`
	NumberOfPerformersOfSameMediums []string `json:"numberOfPerformersOfSameMediums,omitempty"`
	AlternativeMediumOfPerformances []string `json:"alternativeMediumOfPerformances,omitempty"`
	NumberOfIndividualsPerforming   *string  `json:"numberOfIndividualsPerforming,omitempty"`
	NumberOfPerformers              *string  `json:"numberOfPerformers,omitempty"`
	NumberOfEnsembles               *string  `json:"numberOfEnsembles,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner instantiates a new SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner() *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner {
	this := SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInnerWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInnerWithDefaults() *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner {
	this := SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner{}
	return &this
}

// GetMediumOfPerformance returns the MediumOfPerformance field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetMediumOfPerformance() []string {
	if o == nil || IsNil(o.MediumOfPerformance) {
		var ret []string
		return ret
	}
	return o.MediumOfPerformance
}

// GetMediumOfPerformanceOk returns a tuple with the MediumOfPerformance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetMediumOfPerformanceOk() ([]string, bool) {
	if o == nil || IsNil(o.MediumOfPerformance) {
		return nil, false
	}
	return o.MediumOfPerformance, true
}

// HasMediumOfPerformance returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasMediumOfPerformance() bool {
	if o != nil && !IsNil(o.MediumOfPerformance) {
		return true
	}

	return false
}

// SetMediumOfPerformance gets a reference to the given []string and assigns it to the MediumOfPerformance field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetMediumOfPerformance(v []string) {
	o.MediumOfPerformance = v
}

// GetSoloists returns the Soloists field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetSoloists() []string {
	if o == nil || IsNil(o.Soloists) {
		var ret []string
		return ret
	}
	return o.Soloists
}

// GetSoloistsOk returns a tuple with the Soloists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetSoloistsOk() ([]string, bool) {
	if o == nil || IsNil(o.Soloists) {
		return nil, false
	}
	return o.Soloists, true
}

// HasSoloists returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasSoloists() bool {
	if o != nil && !IsNil(o.Soloists) {
		return true
	}

	return false
}

// SetSoloists gets a reference to the given []string and assigns it to the Soloists field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetSoloists(v []string) {
	o.Soloists = v
}

// GetDoublingInstruments returns the DoublingInstruments field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetDoublingInstruments() []string {
	if o == nil || IsNil(o.DoublingInstruments) {
		var ret []string
		return ret
	}
	return o.DoublingInstruments
}

// GetDoublingInstrumentsOk returns a tuple with the DoublingInstruments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetDoublingInstrumentsOk() ([]string, bool) {
	if o == nil || IsNil(o.DoublingInstruments) {
		return nil, false
	}
	return o.DoublingInstruments, true
}

// HasDoublingInstruments returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasDoublingInstruments() bool {
	if o != nil && !IsNil(o.DoublingInstruments) {
		return true
	}

	return false
}

// SetDoublingInstruments gets a reference to the given []string and assigns it to the DoublingInstruments field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetDoublingInstruments(v []string) {
	o.DoublingInstruments = v
}

// GetNumberOfEnsemblesOfSameTypes returns the NumberOfEnsemblesOfSameTypes field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfEnsemblesOfSameTypes() []string {
	if o == nil || IsNil(o.NumberOfEnsemblesOfSameTypes) {
		var ret []string
		return ret
	}
	return o.NumberOfEnsemblesOfSameTypes
}

// GetNumberOfEnsemblesOfSameTypesOk returns a tuple with the NumberOfEnsemblesOfSameTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfEnsemblesOfSameTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.NumberOfEnsemblesOfSameTypes) {
		return nil, false
	}
	return o.NumberOfEnsemblesOfSameTypes, true
}

// HasNumberOfEnsemblesOfSameTypes returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasNumberOfEnsemblesOfSameTypes() bool {
	if o != nil && !IsNil(o.NumberOfEnsemblesOfSameTypes) {
		return true
	}

	return false
}

// SetNumberOfEnsemblesOfSameTypes gets a reference to the given []string and assigns it to the NumberOfEnsemblesOfSameTypes field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetNumberOfEnsemblesOfSameTypes(v []string) {
	o.NumberOfEnsemblesOfSameTypes = v
}

// GetNumberOfPerformersOfSameMediums returns the NumberOfPerformersOfSameMediums field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfPerformersOfSameMediums() []string {
	if o == nil || IsNil(o.NumberOfPerformersOfSameMediums) {
		var ret []string
		return ret
	}
	return o.NumberOfPerformersOfSameMediums
}

// GetNumberOfPerformersOfSameMediumsOk returns a tuple with the NumberOfPerformersOfSameMediums field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfPerformersOfSameMediumsOk() ([]string, bool) {
	if o == nil || IsNil(o.NumberOfPerformersOfSameMediums) {
		return nil, false
	}
	return o.NumberOfPerformersOfSameMediums, true
}

// HasNumberOfPerformersOfSameMediums returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasNumberOfPerformersOfSameMediums() bool {
	if o != nil && !IsNil(o.NumberOfPerformersOfSameMediums) {
		return true
	}

	return false
}

// SetNumberOfPerformersOfSameMediums gets a reference to the given []string and assigns it to the NumberOfPerformersOfSameMediums field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetNumberOfPerformersOfSameMediums(v []string) {
	o.NumberOfPerformersOfSameMediums = v
}

// GetAlternativeMediumOfPerformances returns the AlternativeMediumOfPerformances field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetAlternativeMediumOfPerformances() []string {
	if o == nil || IsNil(o.AlternativeMediumOfPerformances) {
		var ret []string
		return ret
	}
	return o.AlternativeMediumOfPerformances
}

// GetAlternativeMediumOfPerformancesOk returns a tuple with the AlternativeMediumOfPerformances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetAlternativeMediumOfPerformancesOk() ([]string, bool) {
	if o == nil || IsNil(o.AlternativeMediumOfPerformances) {
		return nil, false
	}
	return o.AlternativeMediumOfPerformances, true
}

// HasAlternativeMediumOfPerformances returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasAlternativeMediumOfPerformances() bool {
	if o != nil && !IsNil(o.AlternativeMediumOfPerformances) {
		return true
	}

	return false
}

// SetAlternativeMediumOfPerformances gets a reference to the given []string and assigns it to the AlternativeMediumOfPerformances field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetAlternativeMediumOfPerformances(v []string) {
	o.AlternativeMediumOfPerformances = v
}

// GetNumberOfIndividualsPerforming returns the NumberOfIndividualsPerforming field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfIndividualsPerforming() string {
	if o == nil || IsNil(o.NumberOfIndividualsPerforming) {
		var ret string
		return ret
	}
	return *o.NumberOfIndividualsPerforming
}

// GetNumberOfIndividualsPerformingOk returns a tuple with the NumberOfIndividualsPerforming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfIndividualsPerformingOk() (*string, bool) {
	if o == nil || IsNil(o.NumberOfIndividualsPerforming) {
		return nil, false
	}
	return o.NumberOfIndividualsPerforming, true
}

// HasNumberOfIndividualsPerforming returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasNumberOfIndividualsPerforming() bool {
	if o != nil && !IsNil(o.NumberOfIndividualsPerforming) {
		return true
	}

	return false
}

// SetNumberOfIndividualsPerforming gets a reference to the given string and assigns it to the NumberOfIndividualsPerforming field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetNumberOfIndividualsPerforming(v string) {
	o.NumberOfIndividualsPerforming = &v
}

// GetNumberOfPerformers returns the NumberOfPerformers field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfPerformers() string {
	if o == nil || IsNil(o.NumberOfPerformers) {
		var ret string
		return ret
	}
	return *o.NumberOfPerformers
}

// GetNumberOfPerformersOk returns a tuple with the NumberOfPerformers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfPerformersOk() (*string, bool) {
	if o == nil || IsNil(o.NumberOfPerformers) {
		return nil, false
	}
	return o.NumberOfPerformers, true
}

// HasNumberOfPerformers returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasNumberOfPerformers() bool {
	if o != nil && !IsNil(o.NumberOfPerformers) {
		return true
	}

	return false
}

// SetNumberOfPerformers gets a reference to the given string and assigns it to the NumberOfPerformers field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetNumberOfPerformers(v string) {
	o.NumberOfPerformers = &v
}

// GetNumberOfEnsembles returns the NumberOfEnsembles field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfEnsembles() string {
	if o == nil || IsNil(o.NumberOfEnsembles) {
		var ret string
		return ret
	}
	return *o.NumberOfEnsembles
}

// GetNumberOfEnsemblesOk returns a tuple with the NumberOfEnsembles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) GetNumberOfEnsemblesOk() (*string, bool) {
	if o == nil || IsNil(o.NumberOfEnsembles) {
		return nil, false
	}
	return o.NumberOfEnsembles, true
}

// HasNumberOfEnsembles returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) HasNumberOfEnsembles() bool {
	if o != nil && !IsNil(o.NumberOfEnsembles) {
		return true
	}

	return false
}

// SetNumberOfEnsembles gets a reference to the given string and assigns it to the NumberOfEnsembles field.
func (o *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) SetNumberOfEnsembles(v string) {
	o.NumberOfEnsembles = &v
}

func (o SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MediumOfPerformance) {
		toSerialize["mediumOfPerformance"] = o.MediumOfPerformance
	}
	if !IsNil(o.Soloists) {
		toSerialize["soloists"] = o.Soloists
	}
	if !IsNil(o.DoublingInstruments) {
		toSerialize["doublingInstruments"] = o.DoublingInstruments
	}
	if !IsNil(o.NumberOfEnsemblesOfSameTypes) {
		toSerialize["numberOfEnsemblesOfSameTypes"] = o.NumberOfEnsemblesOfSameTypes
	}
	if !IsNil(o.NumberOfPerformersOfSameMediums) {
		toSerialize["numberOfPerformersOfSameMediums"] = o.NumberOfPerformersOfSameMediums
	}
	if !IsNil(o.AlternativeMediumOfPerformances) {
		toSerialize["alternativeMediumOfPerformances"] = o.AlternativeMediumOfPerformances
	}
	if !IsNil(o.NumberOfIndividualsPerforming) {
		toSerialize["numberOfIndividualsPerforming"] = o.NumberOfIndividualsPerforming
	}
	if !IsNil(o.NumberOfPerformers) {
		toSerialize["numberOfPerformers"] = o.NumberOfPerformers
	}
	if !IsNil(o.NumberOfEnsembles) {
		toSerialize["numberOfEnsembles"] = o.NumberOfEnsembles
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner struct {
	value *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) Get() *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) Set(val *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner(val *SearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) *NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner {
	return &NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerMusicInfoInstrumentationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
