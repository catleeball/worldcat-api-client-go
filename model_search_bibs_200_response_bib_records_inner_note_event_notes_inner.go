/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner{}

// SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner Notes about event [v518sa,d,o,p,3]
type SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner struct {
	CompositeNote *string `json:"compositeNote,omitempty"`
	EventDate     *string `json:"eventDate,omitempty"`
	EventPlace    *string `json:"eventPlace,omitempty"`
	EventInfo     *string `json:"eventInfo,omitempty"`
	Material      *string `json:"material,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner instantiates a new SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner() *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner {
	this := SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerNoteEventNotesInnerWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerNoteEventNotesInnerWithDefaults() *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner {
	this := SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner{}
	return &this
}

// GetCompositeNote returns the CompositeNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetCompositeNote() string {
	if o == nil || IsNil(o.CompositeNote) {
		var ret string
		return ret
	}
	return *o.CompositeNote
}

// GetCompositeNoteOk returns a tuple with the CompositeNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetCompositeNoteOk() (*string, bool) {
	if o == nil || IsNil(o.CompositeNote) {
		return nil, false
	}
	return o.CompositeNote, true
}

// HasCompositeNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) HasCompositeNote() bool {
	if o != nil && !IsNil(o.CompositeNote) {
		return true
	}

	return false
}

// SetCompositeNote gets a reference to the given string and assigns it to the CompositeNote field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) SetCompositeNote(v string) {
	o.CompositeNote = &v
}

// GetEventDate returns the EventDate field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetEventDate() string {
	if o == nil || IsNil(o.EventDate) {
		var ret string
		return ret
	}
	return *o.EventDate
}

// GetEventDateOk returns a tuple with the EventDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetEventDateOk() (*string, bool) {
	if o == nil || IsNil(o.EventDate) {
		return nil, false
	}
	return o.EventDate, true
}

// HasEventDate returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) HasEventDate() bool {
	if o != nil && !IsNil(o.EventDate) {
		return true
	}

	return false
}

// SetEventDate gets a reference to the given string and assigns it to the EventDate field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) SetEventDate(v string) {
	o.EventDate = &v
}

// GetEventPlace returns the EventPlace field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetEventPlace() string {
	if o == nil || IsNil(o.EventPlace) {
		var ret string
		return ret
	}
	return *o.EventPlace
}

// GetEventPlaceOk returns a tuple with the EventPlace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetEventPlaceOk() (*string, bool) {
	if o == nil || IsNil(o.EventPlace) {
		return nil, false
	}
	return o.EventPlace, true
}

// HasEventPlace returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) HasEventPlace() bool {
	if o != nil && !IsNil(o.EventPlace) {
		return true
	}

	return false
}

// SetEventPlace gets a reference to the given string and assigns it to the EventPlace field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) SetEventPlace(v string) {
	o.EventPlace = &v
}

// GetEventInfo returns the EventInfo field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetEventInfo() string {
	if o == nil || IsNil(o.EventInfo) {
		var ret string
		return ret
	}
	return *o.EventInfo
}

// GetEventInfoOk returns a tuple with the EventInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetEventInfoOk() (*string, bool) {
	if o == nil || IsNil(o.EventInfo) {
		return nil, false
	}
	return o.EventInfo, true
}

// HasEventInfo returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) HasEventInfo() bool {
	if o != nil && !IsNil(o.EventInfo) {
		return true
	}

	return false
}

// SetEventInfo gets a reference to the given string and assigns it to the EventInfo field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) SetEventInfo(v string) {
	o.EventInfo = &v
}

// GetMaterial returns the Material field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetMaterial() string {
	if o == nil || IsNil(o.Material) {
		var ret string
		return ret
	}
	return *o.Material
}

// GetMaterialOk returns a tuple with the Material field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) GetMaterialOk() (*string, bool) {
	if o == nil || IsNil(o.Material) {
		return nil, false
	}
	return o.Material, true
}

// HasMaterial returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) HasMaterial() bool {
	if o != nil && !IsNil(o.Material) {
		return true
	}

	return false
}

// SetMaterial gets a reference to the given string and assigns it to the Material field.
func (o *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) SetMaterial(v string) {
	o.Material = &v
}

func (o SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompositeNote) {
		toSerialize["compositeNote"] = o.CompositeNote
	}
	if !IsNil(o.EventDate) {
		toSerialize["eventDate"] = o.EventDate
	}
	if !IsNil(o.EventPlace) {
		toSerialize["eventPlace"] = o.EventPlace
	}
	if !IsNil(o.EventInfo) {
		toSerialize["eventInfo"] = o.EventInfo
	}
	if !IsNil(o.Material) {
		toSerialize["material"] = o.Material
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner struct {
	value *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) Get() *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) Set(val *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner(val *SearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) *NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner {
	return &NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInnerNoteEventNotesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
