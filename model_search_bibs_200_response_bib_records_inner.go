/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBibs200ResponseBibRecordsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBibs200ResponseBibRecordsInner{}

// SearchBibs200ResponseBibRecordsInner struct for SearchBibs200ResponseBibRecordsInner
type SearchBibs200ResponseBibRecordsInner struct {
	Identifier                *SearchBibs200ResponseBibRecordsInnerIdentifier                      `json:"identifier,omitempty"`
	Title                     *SearchBibs200ResponseBibRecordsInnerTitle                           `json:"title,omitempty"`
	Contributor               *SearchBibs200ResponseBibRecordsInnerContributor                     `json:"contributor,omitempty"`
	Subjects                  []SearchBibs200ResponseBibRecordsInnerSubjectsInner                  `json:"subjects,omitempty"`
	Classification            *SearchBibs200ResponseBibRecordsInnerClassification                  `json:"classification,omitempty"`
	Publishers                []SearchBibs200ResponseBibRecordsInnerPublishersInner                `json:"publishers,omitempty"`
	Date                      *SearchBibs200ResponseBibRecordsInnerDate                            `json:"date,omitempty"`
	Language                  *SearchBibs200ResponseBibRecordsInnerLanguage                        `json:"language,omitempty"`
	Edition                   *SearchBibs200ResponseBibRecordsInnerEdition                         `json:"edition,omitempty"`
	Source                    []SearchBibs200ResponseBibRecordsInnerSourceInner                    `json:"source,omitempty"`
	Note                      *SearchBibs200ResponseBibRecordsInnerNote                            `json:"note,omitempty"`
	Format                    *SearchBibs200ResponseBibRecordsInnerFormat                          `json:"format,omitempty"`
	MusicInfo                 *SearchBibs200ResponseBibRecordsInnerMusicInfo                       `json:"musicInfo,omitempty"`
	DigitalAccessAndLocations []SearchBibs200ResponseBibRecordsInnerDigitalAccessAndLocationsInner `json:"digitalAccessAndLocations,omitempty"`
	Description               *SearchBibs200ResponseBibRecordsInnerDescription                     `json:"description,omitempty"`
	Related                   *SearchBibs200ResponseBibRecordsInnerRelated                         `json:"related,omitempty"`
	Work                      *SearchBibs200ResponseBibRecordsInnerWork                            `json:"work,omitempty"`
	EditionCluster            *SearchBibs200ResponseBibRecordsInnerEditionCluster                  `json:"editionCluster,omitempty"`
	// Total number of editions in the workgroup
	TotalEditions    *int32                                              `json:"totalEditions,omitempty"`
	Database         *SearchBibs200ResponseBibRecordsInnerDatabase       `json:"database,omitempty"`
	LocalTitle       *SearchBibs200ResponseBibRecordsInnerTitle          `json:"localTitle,omitempty"`
	LocalContributor *SearchBibs200ResponseBibRecordsInnerContributor    `json:"localContributor,omitempty"`
	LocalSubjects    []SearchBibs200ResponseBibRecordsInnerSubjectsInner `json:"localSubjects,omitempty"`
	LocalNote        *SearchBibs200ResponseBibRecordsInnerNote           `json:"localNote,omitempty"`
	// Genre of work [v655sa,b,v,x,y,z v380sa, (v600,v610,v611,v630,v648, v650,v651,v654 sv) v653sa]
	LocalGenres []string `json:"localGenres,omitempty"`
}

// NewSearchBibs200ResponseBibRecordsInner instantiates a new SearchBibs200ResponseBibRecordsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBibs200ResponseBibRecordsInner() *SearchBibs200ResponseBibRecordsInner {
	this := SearchBibs200ResponseBibRecordsInner{}
	return &this
}

// NewSearchBibs200ResponseBibRecordsInnerWithDefaults instantiates a new SearchBibs200ResponseBibRecordsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBibs200ResponseBibRecordsInnerWithDefaults() *SearchBibs200ResponseBibRecordsInner {
	this := SearchBibs200ResponseBibRecordsInner{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetIdentifier() SearchBibs200ResponseBibRecordsInnerIdentifier {
	if o == nil || IsNil(o.Identifier) {
		var ret SearchBibs200ResponseBibRecordsInnerIdentifier
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetIdentifierOk() (*SearchBibs200ResponseBibRecordsInnerIdentifier, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given SearchBibs200ResponseBibRecordsInnerIdentifier and assigns it to the Identifier field.
func (o *SearchBibs200ResponseBibRecordsInner) SetIdentifier(v SearchBibs200ResponseBibRecordsInnerIdentifier) {
	o.Identifier = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetTitle() SearchBibs200ResponseBibRecordsInnerTitle {
	if o == nil || IsNil(o.Title) {
		var ret SearchBibs200ResponseBibRecordsInnerTitle
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetTitleOk() (*SearchBibs200ResponseBibRecordsInnerTitle, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given SearchBibs200ResponseBibRecordsInnerTitle and assigns it to the Title field.
func (o *SearchBibs200ResponseBibRecordsInner) SetTitle(v SearchBibs200ResponseBibRecordsInnerTitle) {
	o.Title = &v
}

// GetContributor returns the Contributor field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetContributor() SearchBibs200ResponseBibRecordsInnerContributor {
	if o == nil || IsNil(o.Contributor) {
		var ret SearchBibs200ResponseBibRecordsInnerContributor
		return ret
	}
	return *o.Contributor
}

// GetContributorOk returns a tuple with the Contributor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetContributorOk() (*SearchBibs200ResponseBibRecordsInnerContributor, bool) {
	if o == nil || IsNil(o.Contributor) {
		return nil, false
	}
	return o.Contributor, true
}

// HasContributor returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasContributor() bool {
	if o != nil && !IsNil(o.Contributor) {
		return true
	}

	return false
}

// SetContributor gets a reference to the given SearchBibs200ResponseBibRecordsInnerContributor and assigns it to the Contributor field.
func (o *SearchBibs200ResponseBibRecordsInner) SetContributor(v SearchBibs200ResponseBibRecordsInnerContributor) {
	o.Contributor = &v
}

// GetSubjects returns the Subjects field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetSubjects() []SearchBibs200ResponseBibRecordsInnerSubjectsInner {
	if o == nil || IsNil(o.Subjects) {
		var ret []SearchBibs200ResponseBibRecordsInnerSubjectsInner
		return ret
	}
	return o.Subjects
}

// GetSubjectsOk returns a tuple with the Subjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetSubjectsOk() ([]SearchBibs200ResponseBibRecordsInnerSubjectsInner, bool) {
	if o == nil || IsNil(o.Subjects) {
		return nil, false
	}
	return o.Subjects, true
}

// HasSubjects returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasSubjects() bool {
	if o != nil && !IsNil(o.Subjects) {
		return true
	}

	return false
}

// SetSubjects gets a reference to the given []SearchBibs200ResponseBibRecordsInnerSubjectsInner and assigns it to the Subjects field.
func (o *SearchBibs200ResponseBibRecordsInner) SetSubjects(v []SearchBibs200ResponseBibRecordsInnerSubjectsInner) {
	o.Subjects = v
}

// GetClassification returns the Classification field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetClassification() SearchBibs200ResponseBibRecordsInnerClassification {
	if o == nil || IsNil(o.Classification) {
		var ret SearchBibs200ResponseBibRecordsInnerClassification
		return ret
	}
	return *o.Classification
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetClassificationOk() (*SearchBibs200ResponseBibRecordsInnerClassification, bool) {
	if o == nil || IsNil(o.Classification) {
		return nil, false
	}
	return o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasClassification() bool {
	if o != nil && !IsNil(o.Classification) {
		return true
	}

	return false
}

// SetClassification gets a reference to the given SearchBibs200ResponseBibRecordsInnerClassification and assigns it to the Classification field.
func (o *SearchBibs200ResponseBibRecordsInner) SetClassification(v SearchBibs200ResponseBibRecordsInnerClassification) {
	o.Classification = &v
}

// GetPublishers returns the Publishers field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetPublishers() []SearchBibs200ResponseBibRecordsInnerPublishersInner {
	if o == nil || IsNil(o.Publishers) {
		var ret []SearchBibs200ResponseBibRecordsInnerPublishersInner
		return ret
	}
	return o.Publishers
}

// GetPublishersOk returns a tuple with the Publishers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetPublishersOk() ([]SearchBibs200ResponseBibRecordsInnerPublishersInner, bool) {
	if o == nil || IsNil(o.Publishers) {
		return nil, false
	}
	return o.Publishers, true
}

// HasPublishers returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasPublishers() bool {
	if o != nil && !IsNil(o.Publishers) {
		return true
	}

	return false
}

// SetPublishers gets a reference to the given []SearchBibs200ResponseBibRecordsInnerPublishersInner and assigns it to the Publishers field.
func (o *SearchBibs200ResponseBibRecordsInner) SetPublishers(v []SearchBibs200ResponseBibRecordsInnerPublishersInner) {
	o.Publishers = v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetDate() SearchBibs200ResponseBibRecordsInnerDate {
	if o == nil || IsNil(o.Date) {
		var ret SearchBibs200ResponseBibRecordsInnerDate
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetDateOk() (*SearchBibs200ResponseBibRecordsInnerDate, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given SearchBibs200ResponseBibRecordsInnerDate and assigns it to the Date field.
func (o *SearchBibs200ResponseBibRecordsInner) SetDate(v SearchBibs200ResponseBibRecordsInnerDate) {
	o.Date = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetLanguage() SearchBibs200ResponseBibRecordsInnerLanguage {
	if o == nil || IsNil(o.Language) {
		var ret SearchBibs200ResponseBibRecordsInnerLanguage
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetLanguageOk() (*SearchBibs200ResponseBibRecordsInnerLanguage, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given SearchBibs200ResponseBibRecordsInnerLanguage and assigns it to the Language field.
func (o *SearchBibs200ResponseBibRecordsInner) SetLanguage(v SearchBibs200ResponseBibRecordsInnerLanguage) {
	o.Language = &v
}

// GetEdition returns the Edition field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetEdition() SearchBibs200ResponseBibRecordsInnerEdition {
	if o == nil || IsNil(o.Edition) {
		var ret SearchBibs200ResponseBibRecordsInnerEdition
		return ret
	}
	return *o.Edition
}

// GetEditionOk returns a tuple with the Edition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetEditionOk() (*SearchBibs200ResponseBibRecordsInnerEdition, bool) {
	if o == nil || IsNil(o.Edition) {
		return nil, false
	}
	return o.Edition, true
}

// HasEdition returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasEdition() bool {
	if o != nil && !IsNil(o.Edition) {
		return true
	}

	return false
}

// SetEdition gets a reference to the given SearchBibs200ResponseBibRecordsInnerEdition and assigns it to the Edition field.
func (o *SearchBibs200ResponseBibRecordsInner) SetEdition(v SearchBibs200ResponseBibRecordsInnerEdition) {
	o.Edition = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetSource() []SearchBibs200ResponseBibRecordsInnerSourceInner {
	if o == nil || IsNil(o.Source) {
		var ret []SearchBibs200ResponseBibRecordsInnerSourceInner
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetSourceOk() ([]SearchBibs200ResponseBibRecordsInnerSourceInner, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given []SearchBibs200ResponseBibRecordsInnerSourceInner and assigns it to the Source field.
func (o *SearchBibs200ResponseBibRecordsInner) SetSource(v []SearchBibs200ResponseBibRecordsInnerSourceInner) {
	o.Source = v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetNote() SearchBibs200ResponseBibRecordsInnerNote {
	if o == nil || IsNil(o.Note) {
		var ret SearchBibs200ResponseBibRecordsInnerNote
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetNoteOk() (*SearchBibs200ResponseBibRecordsInnerNote, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given SearchBibs200ResponseBibRecordsInnerNote and assigns it to the Note field.
func (o *SearchBibs200ResponseBibRecordsInner) SetNote(v SearchBibs200ResponseBibRecordsInnerNote) {
	o.Note = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetFormat() SearchBibs200ResponseBibRecordsInnerFormat {
	if o == nil || IsNil(o.Format) {
		var ret SearchBibs200ResponseBibRecordsInnerFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetFormatOk() (*SearchBibs200ResponseBibRecordsInnerFormat, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given SearchBibs200ResponseBibRecordsInnerFormat and assigns it to the Format field.
func (o *SearchBibs200ResponseBibRecordsInner) SetFormat(v SearchBibs200ResponseBibRecordsInnerFormat) {
	o.Format = &v
}

// GetMusicInfo returns the MusicInfo field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetMusicInfo() SearchBibs200ResponseBibRecordsInnerMusicInfo {
	if o == nil || IsNil(o.MusicInfo) {
		var ret SearchBibs200ResponseBibRecordsInnerMusicInfo
		return ret
	}
	return *o.MusicInfo
}

// GetMusicInfoOk returns a tuple with the MusicInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetMusicInfoOk() (*SearchBibs200ResponseBibRecordsInnerMusicInfo, bool) {
	if o == nil || IsNil(o.MusicInfo) {
		return nil, false
	}
	return o.MusicInfo, true
}

// HasMusicInfo returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasMusicInfo() bool {
	if o != nil && !IsNil(o.MusicInfo) {
		return true
	}

	return false
}

// SetMusicInfo gets a reference to the given SearchBibs200ResponseBibRecordsInnerMusicInfo and assigns it to the MusicInfo field.
func (o *SearchBibs200ResponseBibRecordsInner) SetMusicInfo(v SearchBibs200ResponseBibRecordsInnerMusicInfo) {
	o.MusicInfo = &v
}

// GetDigitalAccessAndLocations returns the DigitalAccessAndLocations field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetDigitalAccessAndLocations() []SearchBibs200ResponseBibRecordsInnerDigitalAccessAndLocationsInner {
	if o == nil || IsNil(o.DigitalAccessAndLocations) {
		var ret []SearchBibs200ResponseBibRecordsInnerDigitalAccessAndLocationsInner
		return ret
	}
	return o.DigitalAccessAndLocations
}

// GetDigitalAccessAndLocationsOk returns a tuple with the DigitalAccessAndLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetDigitalAccessAndLocationsOk() ([]SearchBibs200ResponseBibRecordsInnerDigitalAccessAndLocationsInner, bool) {
	if o == nil || IsNil(o.DigitalAccessAndLocations) {
		return nil, false
	}
	return o.DigitalAccessAndLocations, true
}

// HasDigitalAccessAndLocations returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasDigitalAccessAndLocations() bool {
	if o != nil && !IsNil(o.DigitalAccessAndLocations) {
		return true
	}

	return false
}

// SetDigitalAccessAndLocations gets a reference to the given []SearchBibs200ResponseBibRecordsInnerDigitalAccessAndLocationsInner and assigns it to the DigitalAccessAndLocations field.
func (o *SearchBibs200ResponseBibRecordsInner) SetDigitalAccessAndLocations(v []SearchBibs200ResponseBibRecordsInnerDigitalAccessAndLocationsInner) {
	o.DigitalAccessAndLocations = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetDescription() SearchBibs200ResponseBibRecordsInnerDescription {
	if o == nil || IsNil(o.Description) {
		var ret SearchBibs200ResponseBibRecordsInnerDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetDescriptionOk() (*SearchBibs200ResponseBibRecordsInnerDescription, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given SearchBibs200ResponseBibRecordsInnerDescription and assigns it to the Description field.
func (o *SearchBibs200ResponseBibRecordsInner) SetDescription(v SearchBibs200ResponseBibRecordsInnerDescription) {
	o.Description = &v
}

// GetRelated returns the Related field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetRelated() SearchBibs200ResponseBibRecordsInnerRelated {
	if o == nil || IsNil(o.Related) {
		var ret SearchBibs200ResponseBibRecordsInnerRelated
		return ret
	}
	return *o.Related
}

// GetRelatedOk returns a tuple with the Related field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetRelatedOk() (*SearchBibs200ResponseBibRecordsInnerRelated, bool) {
	if o == nil || IsNil(o.Related) {
		return nil, false
	}
	return o.Related, true
}

// HasRelated returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasRelated() bool {
	if o != nil && !IsNil(o.Related) {
		return true
	}

	return false
}

// SetRelated gets a reference to the given SearchBibs200ResponseBibRecordsInnerRelated and assigns it to the Related field.
func (o *SearchBibs200ResponseBibRecordsInner) SetRelated(v SearchBibs200ResponseBibRecordsInnerRelated) {
	o.Related = &v
}

// GetWork returns the Work field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetWork() SearchBibs200ResponseBibRecordsInnerWork {
	if o == nil || IsNil(o.Work) {
		var ret SearchBibs200ResponseBibRecordsInnerWork
		return ret
	}
	return *o.Work
}

// GetWorkOk returns a tuple with the Work field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetWorkOk() (*SearchBibs200ResponseBibRecordsInnerWork, bool) {
	if o == nil || IsNil(o.Work) {
		return nil, false
	}
	return o.Work, true
}

// HasWork returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasWork() bool {
	if o != nil && !IsNil(o.Work) {
		return true
	}

	return false
}

// SetWork gets a reference to the given SearchBibs200ResponseBibRecordsInnerWork and assigns it to the Work field.
func (o *SearchBibs200ResponseBibRecordsInner) SetWork(v SearchBibs200ResponseBibRecordsInnerWork) {
	o.Work = &v
}

// GetEditionCluster returns the EditionCluster field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetEditionCluster() SearchBibs200ResponseBibRecordsInnerEditionCluster {
	if o == nil || IsNil(o.EditionCluster) {
		var ret SearchBibs200ResponseBibRecordsInnerEditionCluster
		return ret
	}
	return *o.EditionCluster
}

// GetEditionClusterOk returns a tuple with the EditionCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetEditionClusterOk() (*SearchBibs200ResponseBibRecordsInnerEditionCluster, bool) {
	if o == nil || IsNil(o.EditionCluster) {
		return nil, false
	}
	return o.EditionCluster, true
}

// HasEditionCluster returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasEditionCluster() bool {
	if o != nil && !IsNil(o.EditionCluster) {
		return true
	}

	return false
}

// SetEditionCluster gets a reference to the given SearchBibs200ResponseBibRecordsInnerEditionCluster and assigns it to the EditionCluster field.
func (o *SearchBibs200ResponseBibRecordsInner) SetEditionCluster(v SearchBibs200ResponseBibRecordsInnerEditionCluster) {
	o.EditionCluster = &v
}

// GetTotalEditions returns the TotalEditions field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetTotalEditions() int32 {
	if o == nil || IsNil(o.TotalEditions) {
		var ret int32
		return ret
	}
	return *o.TotalEditions
}

// GetTotalEditionsOk returns a tuple with the TotalEditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetTotalEditionsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalEditions) {
		return nil, false
	}
	return o.TotalEditions, true
}

// HasTotalEditions returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasTotalEditions() bool {
	if o != nil && !IsNil(o.TotalEditions) {
		return true
	}

	return false
}

// SetTotalEditions gets a reference to the given int32 and assigns it to the TotalEditions field.
func (o *SearchBibs200ResponseBibRecordsInner) SetTotalEditions(v int32) {
	o.TotalEditions = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetDatabase() SearchBibs200ResponseBibRecordsInnerDatabase {
	if o == nil || IsNil(o.Database) {
		var ret SearchBibs200ResponseBibRecordsInnerDatabase
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetDatabaseOk() (*SearchBibs200ResponseBibRecordsInnerDatabase, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given SearchBibs200ResponseBibRecordsInnerDatabase and assigns it to the Database field.
func (o *SearchBibs200ResponseBibRecordsInner) SetDatabase(v SearchBibs200ResponseBibRecordsInnerDatabase) {
	o.Database = &v
}

// GetLocalTitle returns the LocalTitle field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalTitle() SearchBibs200ResponseBibRecordsInnerTitle {
	if o == nil || IsNil(o.LocalTitle) {
		var ret SearchBibs200ResponseBibRecordsInnerTitle
		return ret
	}
	return *o.LocalTitle
}

// GetLocalTitleOk returns a tuple with the LocalTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalTitleOk() (*SearchBibs200ResponseBibRecordsInnerTitle, bool) {
	if o == nil || IsNil(o.LocalTitle) {
		return nil, false
	}
	return o.LocalTitle, true
}

// HasLocalTitle returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasLocalTitle() bool {
	if o != nil && !IsNil(o.LocalTitle) {
		return true
	}

	return false
}

// SetLocalTitle gets a reference to the given SearchBibs200ResponseBibRecordsInnerTitle and assigns it to the LocalTitle field.
func (o *SearchBibs200ResponseBibRecordsInner) SetLocalTitle(v SearchBibs200ResponseBibRecordsInnerTitle) {
	o.LocalTitle = &v
}

// GetLocalContributor returns the LocalContributor field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalContributor() SearchBibs200ResponseBibRecordsInnerContributor {
	if o == nil || IsNil(o.LocalContributor) {
		var ret SearchBibs200ResponseBibRecordsInnerContributor
		return ret
	}
	return *o.LocalContributor
}

// GetLocalContributorOk returns a tuple with the LocalContributor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalContributorOk() (*SearchBibs200ResponseBibRecordsInnerContributor, bool) {
	if o == nil || IsNil(o.LocalContributor) {
		return nil, false
	}
	return o.LocalContributor, true
}

// HasLocalContributor returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasLocalContributor() bool {
	if o != nil && !IsNil(o.LocalContributor) {
		return true
	}

	return false
}

// SetLocalContributor gets a reference to the given SearchBibs200ResponseBibRecordsInnerContributor and assigns it to the LocalContributor field.
func (o *SearchBibs200ResponseBibRecordsInner) SetLocalContributor(v SearchBibs200ResponseBibRecordsInnerContributor) {
	o.LocalContributor = &v
}

// GetLocalSubjects returns the LocalSubjects field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalSubjects() []SearchBibs200ResponseBibRecordsInnerSubjectsInner {
	if o == nil || IsNil(o.LocalSubjects) {
		var ret []SearchBibs200ResponseBibRecordsInnerSubjectsInner
		return ret
	}
	return o.LocalSubjects
}

// GetLocalSubjectsOk returns a tuple with the LocalSubjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalSubjectsOk() ([]SearchBibs200ResponseBibRecordsInnerSubjectsInner, bool) {
	if o == nil || IsNil(o.LocalSubjects) {
		return nil, false
	}
	return o.LocalSubjects, true
}

// HasLocalSubjects returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasLocalSubjects() bool {
	if o != nil && !IsNil(o.LocalSubjects) {
		return true
	}

	return false
}

// SetLocalSubjects gets a reference to the given []SearchBibs200ResponseBibRecordsInnerSubjectsInner and assigns it to the LocalSubjects field.
func (o *SearchBibs200ResponseBibRecordsInner) SetLocalSubjects(v []SearchBibs200ResponseBibRecordsInnerSubjectsInner) {
	o.LocalSubjects = v
}

// GetLocalNote returns the LocalNote field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalNote() SearchBibs200ResponseBibRecordsInnerNote {
	if o == nil || IsNil(o.LocalNote) {
		var ret SearchBibs200ResponseBibRecordsInnerNote
		return ret
	}
	return *o.LocalNote
}

// GetLocalNoteOk returns a tuple with the LocalNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalNoteOk() (*SearchBibs200ResponseBibRecordsInnerNote, bool) {
	if o == nil || IsNil(o.LocalNote) {
		return nil, false
	}
	return o.LocalNote, true
}

// HasLocalNote returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasLocalNote() bool {
	if o != nil && !IsNil(o.LocalNote) {
		return true
	}

	return false
}

// SetLocalNote gets a reference to the given SearchBibs200ResponseBibRecordsInnerNote and assigns it to the LocalNote field.
func (o *SearchBibs200ResponseBibRecordsInner) SetLocalNote(v SearchBibs200ResponseBibRecordsInnerNote) {
	o.LocalNote = &v
}

// GetLocalGenres returns the LocalGenres field value if set, zero value otherwise.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalGenres() []string {
	if o == nil || IsNil(o.LocalGenres) {
		var ret []string
		return ret
	}
	return o.LocalGenres
}

// GetLocalGenresOk returns a tuple with the LocalGenres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBibs200ResponseBibRecordsInner) GetLocalGenresOk() ([]string, bool) {
	if o == nil || IsNil(o.LocalGenres) {
		return nil, false
	}
	return o.LocalGenres, true
}

// HasLocalGenres returns a boolean if a field has been set.
func (o *SearchBibs200ResponseBibRecordsInner) HasLocalGenres() bool {
	if o != nil && !IsNil(o.LocalGenres) {
		return true
	}

	return false
}

// SetLocalGenres gets a reference to the given []string and assigns it to the LocalGenres field.
func (o *SearchBibs200ResponseBibRecordsInner) SetLocalGenres(v []string) {
	o.LocalGenres = v
}

func (o SearchBibs200ResponseBibRecordsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBibs200ResponseBibRecordsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Contributor) {
		toSerialize["contributor"] = o.Contributor
	}
	if !IsNil(o.Subjects) {
		toSerialize["subjects"] = o.Subjects
	}
	if !IsNil(o.Classification) {
		toSerialize["classification"] = o.Classification
	}
	if !IsNil(o.Publishers) {
		toSerialize["publishers"] = o.Publishers
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Edition) {
		toSerialize["edition"] = o.Edition
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.MusicInfo) {
		toSerialize["musicInfo"] = o.MusicInfo
	}
	if !IsNil(o.DigitalAccessAndLocations) {
		toSerialize["digitalAccessAndLocations"] = o.DigitalAccessAndLocations
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Related) {
		toSerialize["related"] = o.Related
	}
	if !IsNil(o.Work) {
		toSerialize["work"] = o.Work
	}
	if !IsNil(o.EditionCluster) {
		toSerialize["editionCluster"] = o.EditionCluster
	}
	if !IsNil(o.TotalEditions) {
		toSerialize["totalEditions"] = o.TotalEditions
	}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !IsNil(o.LocalTitle) {
		toSerialize["localTitle"] = o.LocalTitle
	}
	if !IsNil(o.LocalContributor) {
		toSerialize["localContributor"] = o.LocalContributor
	}
	if !IsNil(o.LocalSubjects) {
		toSerialize["localSubjects"] = o.LocalSubjects
	}
	if !IsNil(o.LocalNote) {
		toSerialize["localNote"] = o.LocalNote
	}
	if !IsNil(o.LocalGenres) {
		toSerialize["localGenres"] = o.LocalGenres
	}
	return toSerialize, nil
}

type NullableSearchBibs200ResponseBibRecordsInner struct {
	value *SearchBibs200ResponseBibRecordsInner
	isSet bool
}

func (v NullableSearchBibs200ResponseBibRecordsInner) Get() *SearchBibs200ResponseBibRecordsInner {
	return v.value
}

func (v *NullableSearchBibs200ResponseBibRecordsInner) Set(val *SearchBibs200ResponseBibRecordsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBibs200ResponseBibRecordsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBibs200ResponseBibRecordsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBibs200ResponseBibRecordsInner(val *SearchBibs200ResponseBibRecordsInner) *NullableSearchBibs200ResponseBibRecordsInner {
	return &NullableSearchBibs200ResponseBibRecordsInner{value: val, isSet: true}
}

func (v NullableSearchBibs200ResponseBibRecordsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBibs200ResponseBibRecordsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
