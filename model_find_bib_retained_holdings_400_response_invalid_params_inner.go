/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FindBibRetainedHoldings400ResponseInvalidParamsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FindBibRetainedHoldings400ResponseInvalidParamsInner{}

// FindBibRetainedHoldings400ResponseInvalidParamsInner The validation error descriptor.
type FindBibRetainedHoldings400ResponseInvalidParamsInner struct {
	Path   *string `json:"path,omitempty"`
	Name   *string `json:"name,omitempty"`
	Reason *string `json:"reason,omitempty"`
}

// NewFindBibRetainedHoldings400ResponseInvalidParamsInner instantiates a new FindBibRetainedHoldings400ResponseInvalidParamsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindBibRetainedHoldings400ResponseInvalidParamsInner() *FindBibRetainedHoldings400ResponseInvalidParamsInner {
	this := FindBibRetainedHoldings400ResponseInvalidParamsInner{}
	return &this
}

// NewFindBibRetainedHoldings400ResponseInvalidParamsInnerWithDefaults instantiates a new FindBibRetainedHoldings400ResponseInvalidParamsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindBibRetainedHoldings400ResponseInvalidParamsInnerWithDefaults() *FindBibRetainedHoldings400ResponseInvalidParamsInner {
	this := FindBibRetainedHoldings400ResponseInvalidParamsInner{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) SetPath(v string) {
	o.Path = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) SetName(v string) {
	o.Name = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *FindBibRetainedHoldings400ResponseInvalidParamsInner) SetReason(v string) {
	o.Reason = &v
}

func (o FindBibRetainedHoldings400ResponseInvalidParamsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FindBibRetainedHoldings400ResponseInvalidParamsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableFindBibRetainedHoldings400ResponseInvalidParamsInner struct {
	value *FindBibRetainedHoldings400ResponseInvalidParamsInner
	isSet bool
}

func (v NullableFindBibRetainedHoldings400ResponseInvalidParamsInner) Get() *FindBibRetainedHoldings400ResponseInvalidParamsInner {
	return v.value
}

func (v *NullableFindBibRetainedHoldings400ResponseInvalidParamsInner) Set(val *FindBibRetainedHoldings400ResponseInvalidParamsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFindBibRetainedHoldings400ResponseInvalidParamsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFindBibRetainedHoldings400ResponseInvalidParamsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindBibRetainedHoldings400ResponseInvalidParamsInner(val *FindBibRetainedHoldings400ResponseInvalidParamsInner) *NullableFindBibRetainedHoldings400ResponseInvalidParamsInner {
	return &NullableFindBibRetainedHoldings400ResponseInvalidParamsInner{value: val, isSet: true}
}

func (v NullableFindBibRetainedHoldings400ResponseInvalidParamsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindBibRetainedHoldings400ResponseInvalidParamsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
