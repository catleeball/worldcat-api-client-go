/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FindBibRetainedHoldings400Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FindBibRetainedHoldings400Response{}

// FindBibRetainedHoldings400Response RFC 7807 description of an error.
type FindBibRetainedHoldings400Response struct {
	// A URI reference [RFC3986] that identifies the problem type.
	Type *string `json:"type,omitempty"`
	// A short, human-readable summary of the problem type.
	Title *string `json:"title,omitempty"`
	// A URI reference that identifies the specific occurrence of the problem.
	Instance *string `json:"instance,omitempty"`
	// A human-readable explanation specific to this occurrence of the problem.,
	Detail *string `json:"detail,omitempty"`
	// An array of validation errors.
	InvalidParams []FindBibRetainedHoldings400ResponseInvalidParamsInner `json:"invalidParams,omitempty"`
}

// NewFindBibRetainedHoldings400Response instantiates a new FindBibRetainedHoldings400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindBibRetainedHoldings400Response() *FindBibRetainedHoldings400Response {
	this := FindBibRetainedHoldings400Response{}
	return &this
}

// NewFindBibRetainedHoldings400ResponseWithDefaults instantiates a new FindBibRetainedHoldings400Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindBibRetainedHoldings400ResponseWithDefaults() *FindBibRetainedHoldings400Response {
	this := FindBibRetainedHoldings400Response{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400Response) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400Response) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400Response) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FindBibRetainedHoldings400Response) SetType(v string) {
	o.Type = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400Response) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400Response) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400Response) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *FindBibRetainedHoldings400Response) SetTitle(v string) {
	o.Title = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400Response) GetInstance() string {
	if o == nil || IsNil(o.Instance) {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400Response) GetInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400Response) HasInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *FindBibRetainedHoldings400Response) SetInstance(v string) {
	o.Instance = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400Response) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400Response) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400Response) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *FindBibRetainedHoldings400Response) SetDetail(v string) {
	o.Detail = &v
}

// GetInvalidParams returns the InvalidParams field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings400Response) GetInvalidParams() []FindBibRetainedHoldings400ResponseInvalidParamsInner {
	if o == nil || IsNil(o.InvalidParams) {
		var ret []FindBibRetainedHoldings400ResponseInvalidParamsInner
		return ret
	}
	return o.InvalidParams
}

// GetInvalidParamsOk returns a tuple with the InvalidParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings400Response) GetInvalidParamsOk() ([]FindBibRetainedHoldings400ResponseInvalidParamsInner, bool) {
	if o == nil || IsNil(o.InvalidParams) {
		return nil, false
	}
	return o.InvalidParams, true
}

// HasInvalidParams returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings400Response) HasInvalidParams() bool {
	if o != nil && !IsNil(o.InvalidParams) {
		return true
	}

	return false
}

// SetInvalidParams gets a reference to the given []FindBibRetainedHoldings400ResponseInvalidParamsInner and assigns it to the InvalidParams field.
func (o *FindBibRetainedHoldings400Response) SetInvalidParams(v []FindBibRetainedHoldings400ResponseInvalidParamsInner) {
	o.InvalidParams = v
}

func (o FindBibRetainedHoldings400Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FindBibRetainedHoldings400Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.InvalidParams) {
		toSerialize["invalidParams"] = o.InvalidParams
	}
	return toSerialize, nil
}

type NullableFindBibRetainedHoldings400Response struct {
	value *FindBibRetainedHoldings400Response
	isSet bool
}

func (v NullableFindBibRetainedHoldings400Response) Get() *FindBibRetainedHoldings400Response {
	return v.value
}

func (v *NullableFindBibRetainedHoldings400Response) Set(val *FindBibRetainedHoldings400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindBibRetainedHoldings400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindBibRetainedHoldings400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindBibRetainedHoldings400Response(val *FindBibRetainedHoldings400Response) *NullableFindBibRetainedHoldings400Response {
	return &NullableFindBibRetainedHoldings400Response{value: val, isSet: true}
}

func (v NullableFindBibRetainedHoldings400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindBibRetainedHoldings400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
