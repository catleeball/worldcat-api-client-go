/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet{}

// FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet struct for FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet
type FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet struct {
	Index     *string                                                                             `json:"index,omitempty"`
	FacetType *string                                                                             `json:"facetType,omitempty"`
	Values    []FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetValuesInner `json:"values,omitempty"`
}

// NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet instantiates a new FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet() *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet {
	this := FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet{}
	return &this
}

// NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetWithDefaults instantiates a new FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetWithDefaults() *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet {
	this := FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet{}
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) GetIndex() string {
	if o == nil || IsNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) GetIndexOk() (*string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) SetIndex(v string) {
	o.Index = &v
}

// GetFacetType returns the FacetType field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) GetFacetType() string {
	if o == nil || IsNil(o.FacetType) {
		var ret string
		return ret
	}
	return *o.FacetType
}

// GetFacetTypeOk returns a tuple with the FacetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) GetFacetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FacetType) {
		return nil, false
	}
	return o.FacetType, true
}

// HasFacetType returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) HasFacetType() bool {
	if o != nil && !IsNil(o.FacetType) {
		return true
	}

	return false
}

// SetFacetType gets a reference to the given string and assigns it to the FacetType field.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) SetFacetType(v string) {
	o.FacetType = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) GetValues() []FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetValuesInner {
	if o == nil || IsNil(o.Values) {
		var ret []FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetValuesInner
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) GetValuesOk() ([]FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetValuesInner, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetValuesInner and assigns it to the Values field.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) SetValues(v []FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacetValuesInner) {
	o.Values = v
}

func (o FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.FacetType) {
		toSerialize["facetType"] = o.FacetType
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet struct {
	value *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet
	isSet bool
}

func (v NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) Get() *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet {
	return v.value
}

func (v *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) Set(val *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) {
	v.value = val
	v.isSet = true
}

func (v NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) IsSet() bool {
	return v.isSet
}

func (v *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet(val *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet {
	return &NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet{value: val, isSet: true}
}

func (v NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
