/*
WorldCat Search API v. 2

Searching of WorldCat

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner{}

// FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner struct for FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner
type FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner struct {
	Value             *string                                                                 `json:"value,omitempty"`
	Count             *int32                                                                  `json:"count,omitempty"`
	SubFacet          *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet `json:"subFacet,omitempty"`
	SubFacetItemBrief *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet `json:"subFacetItemBrief,omitempty"`
}

// NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner instantiates a new FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner() *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner {
	this := FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner{}
	return &this
}

// NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerWithDefaults instantiates a new FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerWithDefaults() *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner {
	this := FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) SetValue(v string) {
	o.Value = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) SetCount(v int32) {
	o.Count = &v
}

// GetSubFacet returns the SubFacet field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetSubFacet() FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet {
	if o == nil || IsNil(o.SubFacet) {
		var ret FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet
		return ret
	}
	return *o.SubFacet
}

// GetSubFacetOk returns a tuple with the SubFacet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetSubFacetOk() (*FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet, bool) {
	if o == nil || IsNil(o.SubFacet) {
		return nil, false
	}
	return o.SubFacet, true
}

// HasSubFacet returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) HasSubFacet() bool {
	if o != nil && !IsNil(o.SubFacet) {
		return true
	}

	return false
}

// SetSubFacet gets a reference to the given FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet and assigns it to the SubFacet field.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) SetSubFacet(v FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) {
	o.SubFacet = &v
}

// GetSubFacetItemBrief returns the SubFacetItemBrief field value if set, zero value otherwise.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetSubFacetItemBrief() FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet {
	if o == nil || IsNil(o.SubFacetItemBrief) {
		var ret FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet
		return ret
	}
	return *o.SubFacetItemBrief
}

// GetSubFacetItemBriefOk returns a tuple with the SubFacetItemBrief field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) GetSubFacetItemBriefOk() (*FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet, bool) {
	if o == nil || IsNil(o.SubFacetItemBrief) {
		return nil, false
	}
	return o.SubFacetItemBrief, true
}

// HasSubFacetItemBrief returns a boolean if a field has been set.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) HasSubFacetItemBrief() bool {
	if o != nil && !IsNil(o.SubFacetItemBrief) {
		return true
	}

	return false
}

// SetSubFacetItemBrief gets a reference to the given FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet and assigns it to the SubFacetItemBrief field.
func (o *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) SetSubFacetItemBrief(v FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInnerSubFacet) {
	o.SubFacetItemBrief = &v
}

func (o FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.SubFacet) {
		toSerialize["subFacet"] = o.SubFacet
	}
	if !IsNil(o.SubFacetItemBrief) {
		toSerialize["subFacetItemBrief"] = o.SubFacetItemBrief
	}
	return toSerialize, nil
}

type NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner struct {
	value *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner
	isSet bool
}

func (v NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) Get() *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner {
	return v.value
}

func (v *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) Set(val *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner(val *FindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner {
	return &NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner{value: val, isSet: true}
}

func (v NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindBibRetainedHoldings200ResponseSearchFacetsInnerValuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
